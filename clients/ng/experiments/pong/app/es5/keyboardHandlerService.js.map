{"version":3,"file":"app/es5/keyboardHandlerService.js","sources":["app/es5/keyboardHandlerService.js","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;AAAA,CAAA,AAAC,SAAS,GAAG;ACAT,CAAJ,IAAI,SDEH,SAAM,OAAM,CACC,CAAE;AACb,CAAA,OAAI,OAAO,EAAG,IAAI,IAAG,EAAE,CAAC;GCJc,ADKtC,CCLsC;ACAzC,CAAA,EAAC,eAAe,YAAY,CAAC;CFO3B,WAAQ,CAAR,UAAS,IAAI,CAAE,CAAA,IAAI,CAAE,CAAA,QAAQ;CAC5B,SAAG,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,CAAE;AAC1B,CAAA,WAAI,OAAO,IAAI,CAAC,IAAI,CAAE,IAAI,IAAG,EAAE,CAAC,CAAC;OACjC;CAAA,QAEG,CAAA,OAAO,EAAG,CAAA,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC;CAEnC,SAAG,OAAO,IAAI,CAAC,IAAI,CAAC,CAAE;CACrB,YAAM,IAAI,MAAK,EAAI,IAAI,EAAA,IAAI,EAAA,KAAI,EAAA,qBAAoB,EAAC,CAAC;OACrD;AACD,CADC,YACM,IAAI,CAAC,IAAI,CAAE,SAAQ,CAAC,CAAC;KAC5B;CAED,MAAG,CAAH,UAAI,IAAI,CAAE,CAAA,IAAI;CACb,SAAG,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC;;;;mBACT,CAAA,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC;CACnC,aAAG,OAAO,IAAI,CAAC,IAAI,CAAC;;;;wBACJ,CAAA,OAAO,IAAI,CAAC,IAAI,CAAC;CAChC,mBAAO,SAAQ,CAAC;;WAChB;;OACD;CACD,WAAO,KAAI,CAAC;KACZ;QE7BmF;ADAlF,CAAJ,IAAI,kBDgCH,SAAM,gBAAe,CAER,CAAE;AACb,CAAA,OAAI,OAAO,EAAG,IAAI,OAAM,EAAE,CAAC;GCnCW,ADoCtC,CCpCsC;ACAzC,CAAA,EAAC,eAAe,YAAY,CAAC;CFsC3B,iBAAc,CAAd,UAAe,IAAI,CAAE,CAAA,YAAY,CAAE,CAAA,UAAU,CAAE;AAC9C,CAAA,SAAI,OAAO,SAAS,CAAC,SAAS,CAAE,KAAI,CAAE,aAAY,CAAC,CAAC;AACpD,CAAA,SAAI,OAAO,SAAS,CAAC,OAAO,CAAE,KAAI,CAAE,WAAU,CAAC,CAAC;KAChD;CAED,cAAW,CAAX,UAAY,IAAI,CAAE,CAAA,IAAI,CAAE,CAAA,QAAQ,CAAE;AACjC,CAAA,SAAI,OAAO,SAAS,CAAC,IAAI,CAAE,KAAI,CAAE,SAAQ,CAAC,CAAC;KAC3C;CAED,aAAU,CAAV,UAAW,QAAQ;SACd,CAAA,QAAQ,EAAG,CAAA,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAE,CAAA,QAAQ,MAAM,CAAC;CAC7D,SAAG,QAAQ,CAAE;AACZ,CAAA,eAAQ,eAAe,EAAE,CAAC;AAC1B,CAAA,eAAQ,EAAE,CAAC;OACX;CAAA,IACD;QErDmF;AFwDrF,CAAA,IAAG,QAAQ,CAAC,iBAAiB,CAAE,gBAAe,CAAC,CAAC;CAEhD,CAAC,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;CAAA","sourcesContent":["(function(app) {\r\n\r\n\tclass KeyMap {\r\n\t\tconstructor() {\r\n\t\t\tthis.keyMap = new Map();\r\n\t\t}\r\n\r\n\t\tregister(type, code, callback) {\r\n\t\t\tif(!this.keyMap.has(type)) {\r\n\t\t\t\tthis.keyMap.set(type, new Map());\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet typeMap = this.keyMap.get(type);\r\n\t\t\t\r\n\t\t\tif(typeMap.has(code)) {\r\n\t\t\t\tthrow new Error(`${type} ${code} is already mapped`);\r\n\t\t\t}\r\n\t\t\ttypeMap.set(code, callback);\r\n\t\t}\r\n\r\n\t\tget(type, code) {\r\n\t\t\tif(this.keyMap.has(type)) {\r\n\t\t\t\tlet typeMap = this.keyMap.get(type);\r\n\t\t\t\tif(typeMap.has(code)) {\r\n\t\t\t\t\tlet callback = typeMap.get(code);\r\n\t\t\t\t\treturn callback;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tclass KeyboardHandler \r\n\t{\r\n\t\tconstructor() {\r\n\t\t\tthis.keyMap = new KeyMap();\t\r\n\t\t}\r\n\r\n\t\tregisterUpDown(code, downCallback, upCallback) {\r\n\t\t\tthis.keyMap.register(\"keydown\", code, downCallback);\r\n\t\t\tthis.keyMap.register(\"keyup\", code, upCallback);\r\n\t\t}\r\n\r\n\t\tregisterKey(type, code, callback) {\r\n\t\t\tthis.keyMap.register(type, code, callback);\r\n\t\t}\r\n\r\n\t\tprocessKey(keyEvent) {\r\n\t\t\tlet callback = this.keyMap.get(keyEvent.type, keyEvent.which);\r\n\t\t\tif(callback) {\r\n\t\t\t\tkeyEvent.preventDefault();\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tapp.service(\"keyboardHandler\", KeyboardHandler);\r\n\r\n}(angular.module(\"pong\")));","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)"]}