{"version":3,"file":"classes.js","sources":["classes.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","sourcesContent":["/*\r\n    intro\r\n    what are classes\r\n    a simple class\r\n    a class with a method\r\n\r\n    a class with state\r\n    a class with ctor\r\n\r\n    a class with get and set (accessor functions)\r\n\r\n    a class with a superclass\r\n      (ctor, methods, properties inherited)\r\n    conclusion\r\n\r\n */\r\n\r\ndescribe(\"classes\", function(){\r\n\r\n    it(\"can have methods\", function(){\r\n\r\n        class Employee {\r\n           hire(){\r\n               this.hired = true;\r\n           }\r\n\r\n           getStatus() {\r\n               if(this.hired){\r\n                   return \"hired\";\r\n               }\r\n           }\r\n        }\r\n\r\n        var e = new Employee();\r\n        e.hire();\r\n        expect(e.hired).toBe(true);\r\n        expect(e.getStatus()).toBe(\"hired\");\r\n\r\n    });\r\n\r\n    it(\"can have a constructor and properties\", function(){\r\n\r\n        class Employee {\r\n            constructor(name) {\r\n                this.name = name;\r\n            }\r\n\r\n            getName() {\r\n                return this.name.toUpperCase();\r\n            }\r\n        }\r\n\r\n        var e = new Employee(\"Scott\");\r\n        expect(e.name).toBe(\"Scott\");\r\n        expect(e.getName()).toBe(\"SCOTT\");\r\n\r\n    });\r\n\r\n    it(\"can have getters and setters\", function(){\r\n\r\n        class Employee {\r\n            constructor(name) {\r\n                this._name = name;\r\n            }\r\n\r\n            get name() {\r\n                return this._name.toUpperCase();\r\n            }\r\n\r\n            set name(newName){\r\n                if(newName){\r\n                    this._name = newName;\r\n                }\r\n            }\r\n        }\r\n\r\n        var e = new Employee(\"Scott\");\r\n        expect(e.name).toBe(\"SCOTT\");\r\n\r\n        e.name = \"\";\r\n        expect(e.name).toBe(\"SCOTT\");\r\n\r\n        e.name = \"Alex\";\r\n        expect(e.name).toBe(\"ALEX\");\r\n\r\n    });\r\n\r\n    it(\"can have a base class\", function(){\r\n\r\n        class Person{\r\n            constructor(name) {\r\n                this.name = name;\r\n            }\r\n\r\n            get name() {\r\n                return this._name.toUpperCase();\r\n            }\r\n\r\n            set name(newName){\r\n                if(newName){\r\n                    this._name = newName;\r\n                }\r\n            }\r\n\r\n            toString() {\r\n                return this.name;\r\n            }\r\n        }\r\n\r\n        class Employee extends Person {\r\n            constructor(name, title){\r\n                super(name);\r\n                this._title = title;\r\n            }\r\n\r\n            get title(){\r\n                return this._title;\r\n            }\r\n\r\n            toString() {\r\n                // super is available from methods or constructor\r\n                return this.title + \" \" + super();\r\n            }\r\n        }\r\n\r\n        var e = new Employee(\"Scott\", \"Developer\");\r\n        expect(e.name).toBe(\"SCOTT\");\r\n        expect(e.title).toBe(\"Developer\");\r\n        expect(e.toString()).toBe(\"Developer SCOTT\");\r\n    });\r\n\r\n    it(\"must call super for base class ctor when derived has ctor\", function(){\r\n\r\n        class A {\r\n\r\n            constructor(name){\r\n                this._name = \"A\";\r\n            }\r\n\r\n            test(){\r\n                return \"test\";\r\n            }\r\n        }\r\n\r\n        class B extends A {\r\n            constructor(){\r\n                this._test = super.test();\r\n            }\r\n        }\r\n\r\n        class C extends A {\r\n\r\n        }\r\n\r\n        expect(new A()._name).toBe(\"A\");\r\n        expect(new B()._name).toBeUndefined();\r\n        expect(new B()._test).toBe(\"test\");\r\n        expect(new C()._name).toBe(\"A\");\r\n\r\n    });\r\n\r\n    it(\"can use symbol for private state\", function(){\r\n\r\n        class A {\r\n            constructor(){\r\n                var name = Symbol();\r\n                this[name] = \"Scott\";\r\n            }\r\n        }\r\n\r\n        expect(new A()).toBeDefined();\r\n\r\n    })\r\n\r\n    it(\"does not manage 'this' like arrow functions\", function(){\r\n        expect(true).toBe(true);\r\n//\r\n//        class Employee{\r\n//            constructor(name) {\r\n//                this._name = name;\r\n//            }\r\n//\r\n//            getName() {\r\n//                //if(this._name) {\r\n//                //    return this._name;\r\n//                }\r\n//            }\r\n//        }\r\n//\r\n//        var e = new Employee(\"Scott\");\r\n//        var f = e.getName;\r\n//        expect(f()).toBeUndefined();\r\n//        done();\r\n//\r\n//\r\n   });\r\n\r\n\r\n\r\n    it(\"still uses prototype\", function(){\r\n\r\n        class A {\r\n            doWork() {\r\n                return \"complete!\";\r\n            }\r\n        }\r\n\r\n        var a = new A();\r\n        var result = A.prototype.doWork.call(a);\r\n        expect(result).toBe(\"complete!\");\r\n\r\n    });\r\n\r\n    it(\"can have private properties with Symbols\", function(){\r\n\r\n        var _name = Symbol();\r\n\r\n        class A {\r\n            constructor(name){\r\n                this[_name] = name;\r\n                console.log(name);\r\n                console.log(this.name);\r\n            }\r\n\r\n            get name(){\r\n                return this[_name];\r\n            }\r\n        }\r\n\r\n        var a = new A(\"Scott\");\r\n        expect(a.name).toBe(\"Scott\");\r\n\r\n    })\r\n\r\n});","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","$traceurRuntime.setProperty($__placeholder__0,\n          $__placeholder__1, $__placeholder__2)","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]"]}